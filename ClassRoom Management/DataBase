CREATE DATABASE cse_classroom_db;
USE cse_classroom_db;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    role ENUM('student', 'admin') DEFAULT 'student',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE rooms (
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_number VARCHAR(10) NOT NULL UNIQUE,
    type VARCHAR(50) NOT NULL,
    capacity INT NOT NULL
);

CREATE TABLE schedules (
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_id INT NOT NULL,
    day VARCHAR(10) NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    course_name VARCHAR(100) NOT NULL,
    FOREIGN KEY (room_id) REFERENCES rooms(id) ON DELETE CASCADE
);

CREATE TABLE bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    room_id INT NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME NOT NULL,
    status ENUM('pending', 'approved', 'cancelled') DEFAULT 'pending',
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (room_id) REFERENCES rooms(id) ON DELETE CASCADE
);

CREATE TABLE feedback (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    issue TEXT NOT NULL,
    status ENUM('pending', 'resolved') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE class_routine (
    id INT AUTO_INCREMENT PRIMARY KEY,
    course_title VARCHAR(100) NOT NULL,
    classroom_number VARCHAR(10) ,
    day VARCHAR(10) NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    FOREIGN KEY (classroom_number) REFERENCES rooms(room_number) ON DELETE SET NULL
);

INSERT INTO users (username, password, role) VALUES
('student1', 'pass123', 'student'),
('admin1', 'admin123', 'admin');

-- Insert sample data into rooms
INSERT INTO rooms (room_number, type, capacity) VALUES
('CSE-101', 'Classroom', 50),
('Lab-102', 'Lab', 30),
('Aud-103', 'Auditorium', 100);

-- Insert sample data into schedules
INSERT INTO schedules (room_id, day, start_time, end_time, course_name) VALUES
((SELECT id FROM rooms WHERE room_number = 'CSE-101'), 'Monday', '10:00:00', '12:00:00', 'CSE101'),
((SELECT id FROM rooms WHERE room_number = 'Lab-102'), 'Tuesday', '14:00:00', '16:00:00', 'CSE102');

-- Insert sample data into bookings
INSERT INTO bookings (user_id, room_id, start_time, end_time, status) VALUES
((SELECT id FROM users WHERE username = 'student1'), (SELECT id FROM rooms WHERE room_number = 'CSE-101'), '2025-07-06 10:00:00', '2025-07-06 12:00:00', 'approved');

-- Insert sample data into feedback
INSERT INTO feedback (user_id, issue) VALUES
((SELECT id FROM users WHERE username = 'student1'), 'Room booking process is slow.');

-- Insert sample data into class_routine (placeholder until routine data is provided)
INSERT INTO class_routine (course_title, classroom_number, day, start_time, end_time) VALUES
('CSE101', 'CSE-101', 'Monday', '10:00:00', '12:00:00'),
('CSE102', 'Lab-102', 'Tuesday', '14:00:00', '16:00:00');
